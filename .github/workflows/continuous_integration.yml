name: Continuous Integration

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "macOS"
            os: macos-latest
            package_name: "mac_arm64"
            artifact-path: build/*.zip
            deps_cmdline: "brew install fluidsynth freeimage ftgl lua mpg123 sfml wxwidgets dylibbundler"

          - name: "Linux GCC"
            os: ubuntu-24.04
            deps_cmdline: >-
              sudo apt install
              libfluidsynth-dev libfreeimage-dev libwebkit2gtk-4.1-dev
              libftgl-dev liblua5.3-dev libmpg123-dev libsfml-dev
              libwxgtk3.2-dev libwxgtk-webview3.2-dev

          - name: "Linux Clang"
            os: ubuntu-24.04
            extra_options: "-DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
            deps_cmdline: >-
              sudo apt install
              libfluidsynth-dev libfreeimage-dev libwebkit2gtk-4.1-dev
              libftgl-dev liblua5.3-dev libmpg123-dev libsfml-dev
              libwxgtk3.2-dev libwxgtk-webview3.2-dev

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.deps_cmdline }}" ]]; then
          eval ${{ matrix.config.deps_cmdline }}
        fi

    - name: Configure
      shell: bash
      run: |
        mkdir build
        cmake -B build ${{ matrix.config.extra_options }} .

    - name: Build
      shell: bash
      run: |
        export MAKEFLAGS=--keep-going
        cmake --build build --parallel 3

    - name: Package (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        cd build
        dylibbundler -od -b -x slade.app/Contents/MacOS/slade -d slade.app/Contents/MacOS/libs_arm64 -p @executable_path/libs_arm64
        zip -r slade.zip slade.app

    - name: Upload Artifacts
      if: ${{ matrix.config.package_name }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config.package_name }}
        path: ${{ matrix.config.artifact-path }}
