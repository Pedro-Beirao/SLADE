name: Continuous Integration

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "macOS arm64"
            os: macos-latest
            package_name: "mac_arm64"
            artifact-path: build/*.zip
            
          - name: "macOS x64"
            os: macos-13
            package_name: "mac_x64"
            artifact-path: build/*.zip

          - name: "Linux GCC"
            os: ubuntu-24.04

          - name: "Linux Clang"
            os: ubuntu-24.04
            extra_options: "-DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"

          - name: "Windows MSYS2"
            os: windows-latest
            shell: "msys2 {0}"
            msystem: ucrt64
            msys-env: mingw-w64-ucrt-x86_64
            package_name: "win_x64"
            artifact-path: build/*.zip

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: brew install fluidsynth freeimage ftgl lua mpg123 sfml wxwidgets dylibbundler

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt install \
        libfluidsynth-dev libfreeimage-dev libwebkit2gtk-4.1-dev \
        libftgl-dev liblua5.3-dev libmpg123-dev libsfml-dev \
        libwxgtk3.2-dev libwxgtk-webview3.2-dev
        
    - name: Install Dependencies (MSYS2)
      if: matrix.config.shell == 'msys2 {0}'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.config.msystem }}
        install: >-
          ${{ matrix.config.msys-env }}-gcc
          ${{ matrix.config.msys-env }}-cmake
          ${{ matrix.config.msys-env }}-fluidsynth
          ${{ matrix.config.msys-env }}-freeimage
          ${{ matrix.config.msys-env }}-ftgl
          ${{ matrix.config.msys-env }}-lua
          ${{ matrix.config.msys-env }}-mpg123
          ${{ matrix.config.msys-env }}-sfml
          ${{ matrix.config.msys-env }}-wxWidgets
          zip

    - name: Configure
      run: |
        mkdir build
        cmake -B build ${{ matrix.config.extra_options }} .

    - name: Build
      run: |
        export MAKEFLAGS=--keep-going
        cmake --build build --parallel 3

    - name: Package (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        cd build
        dylibbundler -od -b -x slade.app/Contents/MacOS/slade -d slade.app/Contents/MacOS/libs -p @executable_path/libs
        zip -r slade.zip slade.app

    - name: Package (MSYS2)
      if: matrix.config.shell == 'msys2 {0}'
      run: |
        zip -r slade.zip build

    - name: Upload Artifacts
      if: ${{ matrix.config.package_name }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config.package_name }}
        path: ${{ matrix.config.artifact-path }}
